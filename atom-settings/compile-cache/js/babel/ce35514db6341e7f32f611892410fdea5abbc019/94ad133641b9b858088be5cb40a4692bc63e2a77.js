'use babel';

var $ = require('jquery');
var Prism = require('prismjs');
var Url = require('url');

var Highlight = function Highlight(type, rootNode) {
  if (type in Highlight) {
    Highlight[type](rootNode);
  }
};

Highlight.one = function (node, language) {
  node.classList.add('language-' + language);
  Prism.highlightElement(node);
};

Highlight.all = function (nodes, language) {
  for (var i = 0; i < nodes.length; ++i) {
    Highlight.one(nodes[i], language);
  }
};

Highlight.angular = function (rootNode) {
  var elements = rootNode.getElementsByTagName('pre');
  for (var i = 0; i < elements.length; ++i) {
    var element = elements[i];
    var language = 'javascript';
    if (element.classList.contains('lang-html') || element.textContent[0] == '<') {
      language = 'markup';
    } else if (element.classList.contains('lang-css')) {
      language = 'css';
    }
    element.className = '';
    Highlight.one(element, language);
  }
};

Highlight.bower = function (rootNode) {
  Highlight.all($(rootNode).find('pre[data-lang="js"], pre[data-lang="json"]'), 'javascript');
};

Highlight.c = function (rootNode) {
  Highlight.all($(rootNode.find('pre.source-c, .source-c > pre')), 'c');
  Highlight.all($(rootNode.find('pre.source-cpp, .source-cpp > pre')), 'cpp');
};

Highlight.coffeescript = function (rootNode) {
  Highlight.all($(rootNode).find('.code > pre:first-child'), 'coffeescript');
  Highlight.all($(rootNode).find('.code > pre:last-child'), 'javascript');
};

Highlight.d3 = function (rootNode) {
  Highlight.all($(rootNode).find('.highlight > pre'));
};

Highlight.ember = function (rootNode) {
  var elements = rootNode.getElementsByTagName('pre');
  for (var i = 0; i < elements.length; ++i) {
    var element = elements[i];
    if (element.classList.contains('javascript')) {
      Highlight.one(element, 'javascript');
    } else if (element.classList.contains('html')) {
      Highlight.one(element, 'markup');
    }
  }
};

Highlight.go = function (rootNode) {
  Highlight.all(rootNode.getElementsByTagName('pre'), 'go');
};

// TODO: jquery

Highlight.knockout = function (rootNode) {
  var elements = rootNode.getElementsByTagName('pre');
  for (var i = 0; i < elements.length; ++i) {
    var element = elements[i];
    if (element.innerHTML.indexOf('data-bind="') > 0) {
      Highlight.one(element, 'markup');
    } else {
      Highlight.one(element, 'javascript');
    }
  }
};

Highlight.mdn = function (rootNode) {
  var elements = $(rootNode).find('pre[class^="brush"]');
  for (var i = 0; i < elements.length; ++i) {
    var language = elements[i].className.match(/brush: ?(\w+)/)[1].replace('html', 'markup').replace('js', 'javascript');
    elements[i].className = '';
    Highlight.one(elements[i], language);
  }
};

Highlight.php = function (rootNode) {
  Highlight.all(rootNode.getElementsByClassName('phpcode'), 'php');
};

Highlight.phpunit = function (rootNode) {
  Highlight.all($(rootNode).find('pre.programlisting'), 'php');
};

Highlight.rdoc = function (rootNode) {
  Highlight.all($(rootNode).find('pre.ruby'), 'ruby');
  Highlight.all($(rootNode).find('pre.c'), 'clike');
};

Highlight.react = function (rootNode) {
  var elements = rootNode.getElementsByTagName('pre');
  for (var i = 0; i < elements.length; ++i) {
    var element = elements[i];
    var attribute = element.getAttribute('data-lang');
    if (attribute == 'html') {
      Highlight.one(element, 'markup');
    } else if (attribute == 'javascript') {
      Highlight.one(element, 'javascript');
    }
  }
};

Highlight.sphinx = function (rootNode) {
  Highlight.all($(rootNode).find('pre.python'), 'python');
  Highlight.all($(rootNode).find('pre.markup'), 'markup');
};

Highlight.chai = Highlight.express = Highlight.grunt = Highlight.lodash = Highlight.marionette = Highlight.modernizr = Highlight.moment = Highlight.mongoose = Highlight.node = Highlight.rethinkdb = Highlight.sinon = Highlight.underscore = function (rootNode) {
  Highlight.all(rootNode.getElementsByTagName('pre'), 'javascript');
};

Highlight.requirejs = Highlight.socketio = function (rootNode) {
  var elements = rootNode.getElementsByTagName('pre');
  for (var i = 0; i < elements.length; ++i) {
    if (elements[i].textContent.match(/^\s*</)) {
      Highlight.one(elements[i], 'markup');
    } else {
      Highlight.one(elements[i], 'javascript');
    }
  }
};

module.exports = Highlight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,